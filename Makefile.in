# @configure_input@
#
# $Id$

PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@

# Written by Keith Marshall <keithmarshall@users.sourceforge.net>
# Copyright (C) 2009-2013, MinGW.org Project
#
#
# Makefile template for mingw-get
#
#
# This is free software.  Permission is granted to copy, modify and
# redistribute this software, under the provisions of the GNU General
# Public License, Version 3, (or, at your option, any later version),
# as published by the Free Software Foundation; see the file COPYING
# for licensing details.
#
# Note, in particular, that this software is provided "as is", in the
# hope that it may prove useful, but WITHOUT WARRANTY OF ANY KIND; not
# even an implied WARRANTY OF MERCHANTABILITY, nor of FITNESS FOR ANY
# PARTICULAR PURPOSE.  Under no circumstances will the author, or the
# MinGW.org Project, accept liability for any damages, however caused,
# arising from the use of this software.
#
PACKAGE_SUBSYSTEM = @host_os@

CLI_RELEASE_CLASS = @CLI_RELEASE_CLASS@
GUI_RELEASE_CLASS = @GUI_RELEASE_CLASS@

BUILD_TAG = `>> build.tag; cat build.tag`
DEBUGLEVEL = @DEBUGLEVEL@

srcdir = @srcdir@
abs_top_srcdir = @abs_top_srcdir@

vpath %.ico @srcdir@/icons
VPATH = @top_srcdir@/src:@top_srcdir@/src/pkginfo:@top_srcdir@/tinyxml

CC = @CC@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@ -D DEBUGLEVEL=$(DEBUGLEVEL) $(INCLUDES)

CXX = @CXX@
CXXFLAGS = $(CFLAGS)

INCLUDES = -I ${srcdir}/src -I ${srcdir}/src/pkginfo -I ${srcdir}/tinyxml

LEX = @LEX@

AR = @AR@
ARFLAGS = @ARFLAGS@

RC = @RC@
RC_SCRIPT = tag=$(BUILD_TAG); \
  test "x$$tag" != x && tag="-$(GUI_RELEASE_CLASS)-$$tag"; \
    $(TAG_SCRIPT)

VERSION_SCRIPT = tag=$(BUILD_TAG); \
  test "x$$tag" != x && tag="-$(CLI_RELEASE_CLASS)-$$tag"; \
    $(TAG_SCRIPT)

TAG_SCRIPT = sed \
  -e "s!%PACKAGE_NAME%!$(PACKAGE_TARNAME)!g" \
  -e "s!%PACKAGE_VERSION%!$(PACKAGE_VERSION)$$tag!g" \
  -e "s!%COPYRIGHT_HOLDER%!@COPYRIGHT_HOLDER@!g" \
  -e "s!%YEARS_OF_ISSUE%!@YEARS_OF_ISSUE@!g"

RC_INCLUDES = -I ${srcdir}/src -I ${srcdir}/icons

OBJEXT = @OBJEXT@
EXEEXT = @EXEEXT@

LDFLAGS = @LDFLAGS@
GUI_LDFLAGS = -mwindows $(LDFLAGS)
LIBS = -Wl,-Bstatic -llua -lz -lbz2 -llzma -Wl,-Bdynamic -lwininet

CORE_DLL_OBJECTS  =  climain.$(OBJEXT) pkgshow.$(OBJEXT) dmh.$(OBJEXT) \
   pkgbind.$(OBJEXT) pkginet.$(OBJEXT) pkgstrm.$(OBJEXT) pkgname.$(OBJEXT) \
   pkgexec.$(OBJEXT) pkgfind.$(OBJEXT) pkginfo.$(OBJEXT) pkgspec.$(OBJEXT) \
   pkgopts.$(OBJEXT) sysroot.$(OBJEXT) pkghash.$(OBJEXT) pkgkeys.$(OBJEXT) \
   pkgdeps.$(OBJEXT) pkgreqs.$(OBJEXT) pkginst.$(OBJEXT) pkgunst.$(OBJEXT) \
   tarproc.$(OBJEXT) xmlfile.$(OBJEXT) keyword.$(OBJEXT) vercmp.$(OBJEXT) \
   tinyxml.$(OBJEXT) tinystr.$(OBJEXT) tinyxmlparser.$(OBJEXT) \
   mkpath.$(OBJEXT)  tinyxmlerror.$(OBJEXT)

CLI_EXE_OBJECTS  =   \
   clistub.$(OBJEXT) version.$(OBJEXT) approot.$(OBJEXT) getopt.$(OBJEXT)

GUIMAIN_OBJECTS  =   \
   guimain.$(OBJEXT) guidata.$(OBJEXT) guiexec.$(OBJEXT) guidmh.$(OBJEXT) \
   approot.$(OBJEXT) pkgview.$(OBJEXT) pkgtree.$(OBJEXT) pkglist.$(OBJEXT) \
   pkgdata.$(OBJEXT) pkgnget.$(OBJEXT)

GUIMAIN_LIBS = -lwtklite -lcomctl32

script_srcdir = ${srcdir}/scripts/libexec

BIN_PROGRAMS = pkginfo$(EXEEXT) mingw-get$(EXEEXT)
LIBEXEC_PROGRAMS = guistub$(EXEEXT) guimain$(EXEEXT) lastrites$(EXEEXT)
LIBEXEC_SCRIPTS = ${script_srcdir}/setup.lua ${script_srcdir}/wsh.lua \
   ${script_srcdir}/shlink.js ${script_srcdir}/unlink.js
LIBEXEC_DATA = mingw-get-0.dll

# Primary build goals...
#
all: $(BIN_PROGRAMS) $(LIBEXEC_PROGRAMS) $(LIBEXEC_DATA)

pkginfo$(EXEEXT):  driver.$(OBJEXT) pkginfo.$(OBJEXT)
	$(CC) -o $@ $(CFLAGS) $(LDFLAGS) $+

mingw-get$(EXEEXT): $(CLI_EXE_OBJECTS)
	$(CXX) -o $@ $(CXXFLAGS) $(LDFLAGS) $+

guistub$(EXEEXT): guistub.$(OBJEXT) pkgicon.$(OBJEXT)
	$(CXX) -o $@ $(CXXFLAGS) $(GUI_LDFLAGS) $+

guimain$(EXEEXT): $(GUIMAIN_OBJECTS) $(LIBEXEC_DATA)
	$(CXX) -o $@ $(CXXFLAGS) $(GUI_LDFLAGS) $+ $(GUIMAIN_LIBS)

lastrites$(EXEEXT): rites.$(OBJEXT)
	$(CC) -o $@ $(CFLAGS) $(GUI_LDFLAGS) $+

mingw-get-0.dll: $(CORE_DLL_OBJECTS)
	$(CXX) -shared -o $@ $(CXXFLAGS) $(LDFLAGS) $+ $(LIBS)

# Compilation and dependency tracking...
#
DEPFLAGS = -MM -MP -MD
sinclude *.d

%.$(OBJEXT): %.c
	$(CC) $(DEPFLAGS) $(CPPFLAGS) $(CFLAGS) $<
	$(CC) -c $(CPPFLAGS) $(CFLAGS) -o $@ $<

%.$(OBJEXT): %.cpp
	$(CXX) $(DEPFLAGS) $(CPPFLAGS) $(CXXFLAGS) $<
	$(CXX) -c $(CPPFLAGS) $(CXXFLAGS) -o $@ $<

%.$(OBJEXT): %.rc
	$(CC) $(DEPFLAGS) $(RC_INCLUDES) -DRC_INVOKED -xc-header $<
	$(RC_SCRIPT) $< | $(RC) $(RC_INCLUDES) -o $@

%.$(OBJEXT): %.ico
	echo $* ICON $*.ico | $(RC) -I ${srcdir}/icons -o $@

# Release tagging...
#
time-stamp:
%.tagged.time: time-stamp
	> $*.time

%.time:
	> $*.time

%.tag: %.tagged.time
	>> $@; tag=`date +%Y%m%d`; \
	  tag=`awk -F- -v today=$$tag ' \
	    BEGIN { tag = 1 } $$1 == today { tag += $$2 } \
	    END { print today "-" tag }' $@`; \
	  echo $$tag > $@

%.c: %.c.in
	$(VERSION_SCRIPT) $< > $@

version.c: Makefile build.time
guidata.$(OBJEXT): Makefile build.time

# Installation tools and directory paths...
#
mkinstalldirs = @MKDIR_P@

prefix = @prefix@
exec_prefix = @exec_prefix@
localstatedir = @localstatedir@
libexecdir = @libexecdir@
bindir = @bindir@

PACKAGE_CONFIG_DIR = ${localstatedir}/lib/${PACKAGE_TARNAME}/data

INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@

STRIP = @STRIP@
LN_S = @LN_S@

# Installation rules...
#
installdirs:
	$(mkinstalldirs) ${bindir}
	$(mkinstalldirs) ${libexecdir}/${PACKAGE_TARNAME}
	$(mkinstalldirs) ${PACKAGE_CONFIG_DIR}

install: installdirs install-profile
	for image in $(BIN_PROGRAMS); do \
	  $(INSTALL_PROGRAM) $$image ${bindir}; \
	  done
	for image in $(LIBEXEC_PROGRAMS); do \
	  $(INSTALL_PROGRAM) $$image ${libexecdir}/${PACKAGE_TARNAME}; \
	  done
	for image in $(LIBEXEC_DATA) $(LIBEXEC_SCRIPTS); do \
	  $(INSTALL_DATA) $$image ${libexecdir}/${PACKAGE_TARNAME}; \
	  done

install-profile:
	$(INSTALL_DATA) ${srcdir}/xml/profile.xml \
	  ${PACKAGE_CONFIG_DIR}/defaults.xml

install-strip: install
	for image in $(BIN_PROGRAMS); do \
	  $(STRIP) ${bindir}/$$image; \
	  done
	for image in $(LIBEXEC_PROGRAMS) $(LIBEXEC_DATA); do \
	  $(STRIP) ${libexecdir}/${PACKAGE_TARNAME}/$$image; \
	  done

# Packaging and distribution...
# "Native" source files, (i.e. those specific to mingw-get), are...
#
LICENCE_FILES = README COPYING
SRCDIST_FILES = $(LICENCE_FILES) ChangeLog NEWS INSTALL \
  aclocal.m4 configure.ac configure Makefile.in

# ...plus the entire content of the sub-directories...
#
SRCDIST_SUBDIRS = src src/pkginfo srcdist-doc icons \
  scripts/libexec tinyxml xml

# In addition to the native sources for mingw-get, our source distribution
# must include a filtered subset of those additional files which we import
# from the project's global build-aux repository...
#
BUILD_AUX_DIRS = build-aux build-aux/m4
BUILD_AUX_FILES = config.guess config.sub install-sh missing.m4

# The names of distributed package archive files incorporate version
# information, derived from PACKAGE_VERSION; this is decomposed, so that
# the PACKAGE_SUBSYSTEM may be interposed between the principal version
# number and any qualifying suffix, which specifies development status.
# Additionally, the package maintainer may specify, (at `make dist' time),
# a SNAPSHOT qualifier; if specified, this will be appended, (literally),
# to the principal version number component of the package version number,
# as it appears in the distributed archive file names.
#
PACKAGE_DISTROOT = $(PACKAGE_TARNAME)-$(PACKAGE_ROOTVERSION)
PACKAGE_ROOTVERSION = `echo $(PACKAGE_VERSION) | sed 's,-[^0-9].*,,'`
PACKAGE_DISTVERSION = `echo $(PACKAGE_VERSION)-$(PACKAGE_SUBSYSTEM) | sed \
  -e 's,-[^0-9],-$(PACKAGE_SUBSYSTEM)&,' \
  -e 's,\(-$(PACKAGE_SUBSYSTEM).*\)-$(PACKAGE_SUBSYSTEM),\1,' \
  -e 's,-$(PACKAGE_SUBSYSTEM),$(SNAPSHOT)&,'`
PACKAGE_DISTNAME = $(PACKAGE_TARNAME)-$(PACKAGE_DISTVERSION)

dist: srcdist bindist readme.txt

# Specify default compression command, and associated file name extension,
# for creation and identification of packaged tar archives.
#
TARZIP = xz
TAREXT = tar.$(TARZIP)

# The following macros facilitate the inclusion of SCM build tags within
# the generated names for the release tarballs; the GCMTAG macro is used
# to identify explicitly GUI components, while SCMTAG is used otherwise.
#
BLDTAG =  @abs_top_builddir@/build.tag
SCMTAG = `>> $(BLDTAG); cat $(BLDTAG) | sed 's,.,-$(CLI_RELEASE_CLASS)-&,'`
GCMTAG = `>> $(BLDTAG); cat $(BLDTAG) | sed 's,.,-$(GUI_RELEASE_CLASS)-&,'`

bindist: all licdist
	rm -rf staged
	$(MAKE) --no-print-directory prefix=`pwd`/staged install-strip
	cd staged; tar chf - bin/pkginfo$(EXEEXT) | $(TARZIP) -c > \
	  ../pkginfo-$(PACKAGE_DISTVERSION)$(SCMTAG)-bin.$(TAREXT)
	rm staged/bin/pkginfo$(EXEEXT)
	cd staged; tar chf - libexec/mingw-get/guimain$(EXEEXT) | \
	  $(TARZIP) -c > ../$(PACKAGE_DISTNAME)$(GCMTAG)-gui.$(TAREXT)
	rm staged/libexec/mingw-get/guimain$(EXEEXT)
	cd staged; tar chf - * | $(TARZIP) -c > \
	  ../$(PACKAGE_DISTNAME)$(SCMTAG)-bin.$(TAREXT)
	cd staged; zip -r ../$(PACKAGE_DISTNAME)$(SCMTAG)-bin.zip *
	rm -rf staged

licdist:
	rm -rf share
	$(mkinstalldirs) ./share/doc/${PACKAGE_TARNAME}
	cd ./share/doc/${PACKAGE_TARNAME}; for file in $(LICENCE_FILES); \
	  do test -f ${abs_top_srcdir}/$$file \
	    && $(LN_S) ${abs_top_srcdir}/$$file . \
	    || $(LN_S) ${CURDIR}/$$file .; \
	  done
	tar chf - share | $(TARZIP) -c > \
	  $(PACKAGE_DISTNAME)$(SCMTAG)-lic.$(TAREXT)
	rm -rf share

srcdist: srcdist-doc
	rm -rf ${PACKAGE_DISTROOT} && mkdir ${PACKAGE_DISTROOT}
	cd ${PACKAGE_DISTROOT}; for file in $(SRCDIST_FILES); do \
	  test -f ${abs_top_srcdir}/$$file \
	    && $(LN_S) ${abs_top_srcdir}/$$file . \
	    || $(LN_S) ../$$file .; \
	  done
	for dir in $(SRCDIST_SUBDIRS); do \
	  $(mkinstalldirs) ${PACKAGE_DISTROOT}/$$dir \
	  && cd ${PACKAGE_DISTROOT}/$$dir; \
	  for file in `cd ${abs_top_srcdir}/$$dir && echo *`; do \
	    if test -f ${abs_top_srcdir}/$$dir/$$file; then \
	      $(LN_S) ${abs_top_srcdir}/$$dir/$$file .; \
	    fi; \
	  done; \
	cd ${CURDIR}; done
	for dir in $(BUILD_AUX_DIRS); do \
	  $(mkinstalldirs) ${PACKAGE_DISTROOT}/$$dir \
	  && cd ${PACKAGE_DISTROOT}/$$dir; \
	  for file in $(BUILD_AUX_FILES); do \
	    if test -f ${abs_top_srcdir}/$$dir/$$file; then \
	      $(LN_S) ${abs_top_srcdir}/$$dir/$$file .; \
	    fi; \
	  done; \
	cd ${CURDIR}; done
	cd ${PACKAGE_DISTROOT}/src/pkginfo; $(LN_S) ${CURDIR}/pkginfo.c .
	tar chf - ${PACKAGE_DISTROOT} | $(TARZIP) -c > \
	  $(PACKAGE_DISTNAME)$(SCMTAG)-src.$(TAREXT)
	rm -rf ${PACKAGE_DISTROOT}

# README, INSTALL and NEWS files to be included in the source distribution
# are generated on demand, as indirect side effects of a set of phoney goals
# so that they are always regenerated for each distribution, from templates
# in srcdist-doc so that we can make them version specific.
#
vpath %.in ${srcdir}/srcdist-doc
srcdist-doc: README.dist NEWS.dist INSTALL.dist

# We need to ensure that, when we invoke nroff, the generated output
# will be suited to an ASCII class of typesetter; without the -Tascii
# option, GNU nroff will substitute Unicode hyphens (u2010) in place
# of ASCII hyphens (code 45).
#
NROFF = nroff -Tascii

%.dist: %.in gendoc.simple.sed
	sed -f gendoc.simple.sed $< | $(NROFF) > $*

%.simple.sed: %.sed.in
	sed -e s,'$${PACKAGE_DIRNAME}',"${PACKAGE_DISTROOT}", \
	    -e s,'$${PACKAGE_DISTNAME}',"${PACKAGE_DISTNAME}", $< > $@

%.combined.sed: %.sed.in
	sed -e s,'$${PACKAGE_DIRNAME}',"${PACKAGE_DISTROOT}", \
	    -e s,'$${PACKAGE_DISTNAME}',"${PACKAGE_DISTNAME}", \
	    -e s,'^# *cut:',, $< > $@

# The following rules use sed and awk to match the RCS Id keyword;
# we define and use the following macro, in the form "$(DOLLAR)Id:",
# to avoid unwanted substitution on CVS checkout.
#
DOLLAR = $$

# The following rule provides a mechanism for generating a composite from
# README, INSTALL and NEWS, for use as an on-line package description.
#
readme.txt: gendoc.combined.sed readme.txt.tag readme.txt.in
	sed s,'$(DOLLAR)Id:.*',"`cat $@.tag`", $@.in > $@
	echo '$$Document: $@ $$: end of file' >> $@
	rm -f gendoc.combined.sed $@.*

# There should be a new generation of readme.txt for each package release;
# since each release should also include an updated NEWS file; we adopt the
# ID tag-line from NEWS.in, as most the appropriate template for generation
# of a corresponding tag-line for readme.in
#
readme.txt.tag: NEWS.in
	awk '/\$(DOLLAR)Id:/{ $$2 = "readme.txt\\,v"; print }' $^ > $@

# The tag-line generated by the preceding rule may then be substituted, by
# the primary readme.txt generation rule above, into the document template
# generated by the following rule
#
readme.txt.in: README.in NEWS.in INSTALL.in
	rm -f $@
	for input in $^; do \
	  sed -f gendoc.combined.sed $$input | $(NROFF) >> $@; \
	  done

# Workspace clean-up...
#
clean:
	rm -f *.$(OBJEXT) *.d *.dll $(BIN_PROGRAMS) $(LIBEXEC_PROGRAMS)

distclean: clean
	rm -f config.* version.c

maintainer-clean: distclean
	rm -f README NEWS INSTALL readme.txt Makefile pkginfo.c
	rm -f *-$(PACKAGE_DISTVERSION)-*.tar.* *-$(PACKAGE_DISTVERSION)-*.zip
	rm -rf ${PACKAGE_DISTROOT} staged ${srcdir}/autom4te.cache

# $RCSfile$: end of file
